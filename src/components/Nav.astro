---
import { Icon } from "astro-icon/components";
import Link from "./Link.astro";
import { navData } from "../data/navData";
import ThemeIcon from "@components/ThemeIcon.astro";
---

<nav aria-label="Primary">
  <div class="navbar">
    <a href="/" class="logomark" aria-label="Go home">
      <Icon name="logomark" width="40" height="40" />
    </a>

    <!-- DESKTOP NAVIGATION -->
    <div class="desktop-nav">
      <ul>
        {
          navData.map((item) => (
            <Link
              text={item.name}
              href={item.path}
              style="primary"
              isFilled={false}
              data-navLink
            />
          ))
        }
      </ul>
      <div class="navbar-actions">
        <ThemeIcon />
        <a
          href="https://github.com/xaaha/"
          class="action-icon"
          aria-label="View GitHub profile"
        >
          <Icon name="tabler:brand-github" />
        </a>
        <a
          href="https://www.linkedin.com/in/pthapa1"
          class="action-icon"
          aria-label="View LinkedIn profile"
        >
          <Icon name="tabler:brand-linkedin" />
        </a>
      </div>
    </div>

    <!-- MOBILE NAVIGATION -->
    <div class="mobile-nav-container">
      <button
        id="mobile-menu-toggle"
        class="menu-toggle"
        aria-label="Open menu"
        aria-expanded="false"
        aria-controls="mobile-menu-panel"
        type="button"
      >
        <span class="menu-icon-line line-1"></span>
        <span class="menu-icon-line line-2"></span>
        <span class="menu-icon-line line-3"></span>
      </button>

      <div id="mobile-menu-panel" class="mobile-menu-panel" aria-hidden="true">
        <div class="mobile-menu-content">
          <ul class="mobile-menu-list">
            {
              navData.map((item) => (
                <li>
                  <a href={item.path}>{item.name}</a>
                </li>
              ))
            }
          </ul>
          <div class="mobile-menu-actions">
            <ThemeIcon />
            <a
              href="https://github.com/xaaha/"
              class="action-icon"
              aria-label="View GitHub profile"
            >
              <Icon name="tabler:brand-github" />
            </a>
            <a
              href="https://www.linkedin.com/in/pthapa1"
              class="action-icon"
              aria-label="View LinkedIn profile"
            >
              <Icon name="tabler:brand-linkedin" />
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
</nav>

<style>
  .desktop-nav {
    display: flex;
    align-items: center;
    gap: var(--space-lg);
  }

  .navbar-actions {
    display: flex;
    align-items: center;
    gap: var(--space-sm);
  }

  .action-icon {
    display: grid;
    place-items: center;
    width: 40px;
    height: 40px;
    color: hsl(var(--txt));
    border-radius: var(--radius-md);
  }

  .action-icon:focus-visible {
    outline: none;
    box-shadow:
      0 0 0 2px hsl(var(--bkg)),
      0 0 0 4px hsl(var(--accent));
  }

  .action-icon :global(svg) {
    width: 27px;
    height: 27px;
  }
  .action-icon:hover {
    color: hsl(var(--accent));
  }

  /* --- MOBILE NAVIGATION --- */
  .mobile-nav-container {
    display: none; /* Hidden on desktop */
  }

  /* Hamburger Toggle Button */
  .menu-toggle {
    position: fixed;
    top: var(--space-md);
    right: var(--space-md);

    display: flex;
    flex-direction: column;
    gap: 6px;
    width: 40px;
    height: 40px;
    justify-content: center;
    align-items: center;
    background: none;
    border: none;
    padding: 0;
    cursor: pointer;
    z-index: 2;
    box-shadow: none;
    border-radius: var(--radius-md);
  }

  .menu-toggle:focus-visible {
    outline: none;
    box-shadow:
      0 0 0 2px hsl(var(--bkg)),
      0 0 0 4px hsl(var(--accent));
  }

  .menu-icon-line {
    width: 20px;
    height: 2px;
    background: hsl(var(--txt));
    border-radius: 2px;
    transition: all 0.3s cubic-bezier(0.76, 0.07, 0.52, 0.8);
  }

  .menu-toggle.is-open .line-1 {
    /* The new translation value is (gap + height) = 6px + 2px = 8px */
    transform: translateY(8px) rotate(45deg);
  }
  .menu-toggle.is-open .line-2 {
    opacity: 0;
  }
  .menu-toggle.is-open .line-3 {
    transform: translateY(-8px) rotate(-45deg);
  }
  /* "Curtain" Menu Panel */
  .mobile-menu-panel {
    position: fixed;
    inset: 0;
    z-index: 1;
    background: hsl(var(--bkg));
    color: hsl(var(--txt));

    display: grid; /*  Use grid to easily center content */
    place-items: center;

    transform-origin: top;
    transform: scaleY(0);
    transition: transform 0.4s cubic-bezier(0.25, 1, 0.5, 1);
  }

  .mobile-menu-panel.is-open {
    transform: scaleY(1);
  }

  .mobile-menu-content {
    display: flex;
    flex-direction: column;
    align-items: center; /* Center all items within */
    gap: var(--space-2xl);
  }

  .mobile-menu-list {
    display: flex;
    flex-direction: column;
    align-items: center; /* FIX: Center-align menu items */
    gap: var(--space-lg);
  }

  .mobile-menu-list a {
    font-size: var(--fs-xl); /* FIX: Reduced font size */
    font-weight: 500;
    color: hsl(var(--txt));
    text-decoration: none;
  }

  .mobile-menu-actions {
    display: flex;
    justify-content: center; /* FIX: Center icons horizontally */
    gap: var(--space-lg);
  }

  /* --- MEDIA QUERY --- */
  @media (max-width: 767px) {
    .desktop-nav {
      display: none;
    }
    .mobile-nav-container {
      display: block;
    }

    .navbar {
      justify-content: space-between;
    }
  }
</style>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const toggleBtn = document.getElementById("mobile-menu-toggle");
    const panel = document.getElementById("mobile-menu-panel");

    if (toggleBtn && panel) {
      let isMenuOpen = false;

      function openMenu() {
        if (isMenuOpen) return;
        isMenuOpen = true;
        toggleBtn.classList.add("is-open");
        toggleBtn.setAttribute("aria-expanded", "true");
        panel.classList.add("is-open");
        panel.setAttribute("aria-hidden", "false");
        document.body.style.overflow = "hidden";
      }

      function closeMenu() {
        if (!isMenuOpen) return;
        isMenuOpen = false;
        toggleBtn.classList.remove("is-open");
        toggleBtn.setAttribute("aria-expanded", "false");
        panel.classList.remove("is-open");
        panel.setAttribute("aria-hidden", "true");
        document.body.style.overflow = "";
      }

      toggleBtn.addEventListener("click", () => {
        isMenuOpen ? closeMenu() : openMenu();
      });

      document.addEventListener("keydown", (e) => {
        if (e.key === "Escape" && isMenuOpen) {
          closeMenu();
        }
      });

      panel.querySelectorAll("a").forEach((link) => {
        link.addEventListener("click", closeMenu);
      });
    }

    // --- Theme Toggle Logic (moved from ThemeIcon.astro) ---
    const handleToggleClick = () => {
      const element = document.documentElement;
      element.classList.toggle("dark");

      const isDark = element.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    };

    // This now finds ALL theme buttons after the page is loaded
    document.querySelectorAll(".theme-toggle-button").forEach((button) => {
      button.addEventListener("click", handleToggleClick);
    });
  });
</script>
