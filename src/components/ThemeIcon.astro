---
import { Icon } from "astro-icon/components";
---

<button id="themeToggle" title="Toggle theme">
  <Icon name="tabler:sun" class="sun-icon" />
  <Icon name="tabler:moon" class="moon-icon" />
</button>

<style>
  #themeToggle {
    border: 0;
    background: none;
    box-shadow: none;
    cursor: pointer;
    padding: 0;
    width: 40px;
    height: 40px;
    color: hsl(var(--txt));
    display: grid;
    place-items: center;
  }

  /* Add a visible focus style for keyboard navigation */
  #themeToggle:focus-visible {
    outline: none;
    box-shadow:
      0 0 0 2px hsl(var(--bkg)),
      0 0 0 4px hsl(var(--accent));
  }

  .sun-icon,
  .moon-icon {
    width: 27px;
    height: 27px;
  }

  /* Hide the moon icon by default (in light mode) */
  .moon-icon {
    display: none;
  }
  .moon-icon:hover {
    color: hsl(var(--accent));
  }
  .sun-icon:hover {
    color: hsl(45, 55%, 50%);
  }

  /* When the .dark class is on the html tag... */
  :global(.dark) .moon-icon {
    /* ...show the moon icon... */
    display: block;
  }

  :global(.dark) .sun-icon {
    /* ...and hide the sun icon. */
    display: none;
  }
</style>

<script is:inline>
  const theme = (() => {
    const localStorageTheme = localStorage?.getItem("theme") ?? "";
    if (["dark", "light"].includes(localStorageTheme)) {
      return localStorageTheme;
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  if (theme === "light") {
    document.documentElement.classList.remove("dark");
  } else {
    document.documentElement.classList.add("dark");
  }

  window.localStorage.setItem("theme", theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle("dark");

    const isDark = element.classList.contains("dark");
    localStorage.setItem("theme", isDark ? "dark" : "light");
  };

  document
    .getElementById("themeToggle")
    ?.addEventListener("click", handleToggleClick);
</script>
