---
import Mainlayout from "@layouts/Mainlayout.astro";
import type { MarkdownInstance } from "astro";
import { getLastGitDate } from "@scripts/utils.ts";
// import PostCard from "@components/PostCard.astro";

const blogPosts = import.meta.glob<MarkdownInstance<Frontmatter>>(
  "./*.{md,mdx}",
  {
    eager: true,
  },
);

// 2. Extract and format the data
const posts = await Promise.all(
  Object.entries(blogPosts).map(async ([filepath, post]) => {
    return {
      title:
        post.frontmatter.title ||
        filepath
          .split("/")
          .pop()
          ?.replace(/\.(md|mdx)$/, "") ||
        "Untitled",
      url: filepath.replace(/\.(md|mdx)$/, ""),
      date: post.frontmatter.date
        ? new Date(post.frontmatter.date)
        : await getLastGitDate(filepath),
    };
  }),
);

// sort post newest first
const sortedPosts = posts.sort((a, b) => {
  const timeA = a.date ? new Date(a.date).setHours(12, 0, 0, 0) : 0;
  const timeB = b.date ? new Date(b.date).setHours(12, 0, 0, 0) : 0;
  return timeB - timeA;
});
---

<Mainlayout>
  <section class="container" aria-label="New Blog Post">
    <h1 class="h1">Recents</h1>
    <div class="post-container">
      {
        sortedPosts.map((post) => (
          <li>
            <a href={post.url}>{post.title}</a>
            {post.date && <span> ({post.date.toLocaleDateString()})</span>}
          </li>
          <!-- <PostCard frontmatter={post.url} url={post.url} tagType="h2" /> -->
        ))
      }
    </div>
  </section>
</Mainlayout>
