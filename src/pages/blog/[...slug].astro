---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import BlogPostLayout from "@layouts/BlogPostLayout.astro";

// get blog's static paths
export async function getStaticPaths() {
  const blogEntries = await getCollection("blog", ({ data }) => {
    return data.draft !== true;
  });

  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

// Type assertion for the props coming from getStaticPaths
interface Props {
  entry: CollectionEntry<"blog">;
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<!-- 
  This is where the magic happens. We pass the post's frontmatter 
  (entry.data) to the layout, and then we render the post's actual 
  Markdown content using the <Content /> component.
-->
<BlogPostLayout frontmatter={entry.data}>
  <Content />
</BlogPostLayout>
